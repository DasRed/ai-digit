{
    test: {
        inputs: [],
        data: './data/training/brain.json',
        output: './data/training/result.json'
    },
    createTrainingData: {
        // optional | Defines the input directory. requires JSON files generated by prepare command
        input: './data/raw/{number}',
        // optional | Defines the output file with training data.
        output: './data/training/training.json',
        overwrite: true,
    },
    training: {
        // optional | Defines the input training data
        input: './data/training/training.json',
        // optional | Defines the output file with training data.
        output: './data/training/brain.json',
        // optional | overwrite destination files
        overwrite: true,
        ai: {
            config: {
                //                binaryThresh: 0.5,
                //                hiddenLayers: [128, 64],
                //                activation: 'sigmoid', // | 'relu' | 'leaky-relu' | 'tanh';
                //                leakyReluAlpha: 0.01, // supported for activation type 'leaky-relu'
            },
            training: {
                //                iterations: 2000, // the maximum times to iterate the training data --> number greater than 0
                //                errorThresh: 0.005, // the acceptable error percentage from training data --> number between 0 and 1
                //                learningRate: 0.3, // scales with delta to effect training rate --> number between 0 and 1
                //                momentum: 0.1, // scales with next layer's change value --> number between 0 and 1
            },
        }
    },
    snapshot: {
        stream: 'https://normalstromzaehler.dasred.de/stream?flashlight=true',
        // count of images
        count: 20,
        // interval between every image in ms
        interval: 0,
        // interval for warm up
        warmupInterval: 2000,
        output: './data/snapshot/{timestamp}-{count}.jpg',
        clear: './data/snapshot',
    },
    sortSnapshot: {
        output: './data/raw/{number}/pos-{line}-{position}/{file}',
        delete: false,
        overwrite: true,
        files: {}
    },
    prepare: {
        // optional | Defines the input directory.
        input: './data/raw/{number}/{position}/',
        positions: {},
        // defines the actions to perform
        actions: [
            /*
            {
                type: 'blackWhite',
                format: 'png',
                options: {
                    colors: 2,
                    force: true
                }
            },

            {
                type: 'brightness',
                value: 0..1000,
            },

            {
                type: 'blur',
                sigma: 0.3..1000,
            },

            {
                type: 'clahe',
                options: {
                    width: 3,
                    height: 3,
                    maxSlope: 3,
                },
            },

            {
                type: 'clear',
                directory: './data/training/prepared',
                onlyRunOnce: true,
            },

            {
                type: 'colorspace',
                value: 'b-w', // srgb, rgb, cmyk, lab, b-w https://sharp.pixelplumbing.com/api-colour#tocolorspace
            },

            {
                type: 'convolve',
                kernel: {
                    width: 3,
                    height: 3,
                    kernel: [-1, 0, 1, -2, 0, 2, -1, 0, 1],
                    scale: 1,
                    offset: 0,
                },
            },

            {
                type: 'crop',
            },

            {
                type: 'delete',
            },

            {
                type: 'flip',
            },

            {
                type: 'flop',
            },

            {
                type: 'gamma',
                gamma: 1.0..3.0,
                gammaOut: 1.0..3.0,
            },

            {
                type: 'gif',
                options: {colors: 2}
            },

            {
                // alias for "greyscale"
                type: 'grayscale',
            },

            {
                type: 'greyscale',
            },

            {
                type: 'hue',
                value: 0..1000,
            },

            {
                type: 'lightness',
                value: 0..1000,
            },

            {
                type: 'median',
                size: 3,
            },

            {
                type: 'linear',
                a: 0.5, // [0.25, 0.5, 0.75]
                b: 2, // [150, 100, 50]
            },

            {
                type: 'jpeg',
                options: {quality: 100}
            },

            {
                type: 'modulate',
                brightness: 2,
                saturation: 2,
                hue: 2,
                lightness: 2,
            },

            {
                type: 'negate',
            },

            {
                type: 'normalise',
                lower: 1,
                upper: 99,
            },

            {
                // alias for "normalise"
                type: 'normalize',
            },

            {
                type: 'png',
                options: {colors: 2}
            },

            {
                type: 'resize',
                width: 32,
                height: 32,
                options: {
                    width: 1,
                    height: 1,
                    fit: "cover", //cover, contain, fill, inside or outside
                    position: "centre",
                    background: {r: 0, g: 0, b: 0, alpha: 1}, // see https://www.npmjs.com/package/color
                    kernel: "lanczos3",
                    withoutEnlargement: false,
                    withoutReduction: false,
                    fastShrinkOnLoad: true,
                }
            },

            {
                type: 'rotate',
                angle: 0..360
            },

            {
                type: 'saturation',
                value: 0..1000,
            },

            {
                type: 'save',
                as: 'json5', // json5 or image
                file: './data/training/prepared/{number}/{fileName}-{position}.json',
                overwrite: true,
                options: {
                    colorspace: 'srgb'
                }
            },

            {
                type: 'sharpen',
                // optional
                options: 10
                // or object
                options: {
                    sigma: 0.000001..10,
                    m1: 0..1000000,
                    m2: 0..1000000,
                    x1: 0..1000000,
                    y2: 0..1000000,
                    y3: 0..1000000,
                }
            },
            {
                type: 'threshold',
                threshold: 0..255
                options: {
                    greyscale: true / false
                    // alternative spelling for greyscale.
                    grayscale: true / false
                }
            },

            {
                type: 'tint',
                // see https://www.npmjs.com/package/color
                options: 'rgb(255, 255, 255)'
                options: {r: 255, g: 255, b: 255}
            },

            */
        ]
    },
    build: {
        docker: {
            host: '192.168.178.3',
            port: 2375,
            version: 'v1.41'
        },
        image: 'ai-digit',
    },
    swarm: {
        delete: false,
        overwrite: false,
        docker: {
            host: '192.168.178.3',
            port: 2375,
            version: 'v1.41'
        },
        verbose: 2,
        maxParallel: 10,
        image: 'ai-digit',
        name: 'ai-digit-{id}',
        output: '/System/Volumes/Data/eros/ai-digit/{jobPathName}.csv',
        jobPathName: 'jobs',
        paths: {
            raw: './data/raw',
            rawTemplate: './data/raw/{number}/{position}',
            prepared: '/System/Volumes/Data/eros/ai-digit/prepared',
            jobs: '/System/Volumes/Data/eros/ai-digit/{jobPathName}',
        },
        mounts: {
            raw: '/mnt/ai-digit/raw',
            jobs: '/mnt/ai-digit/{jobPathName}',
            prepared: '/mnt/ai-digit/prepared',
            src: '/ai-digit'
        },
        config: {
            dimensions: [],
            // [[16, 27], [32, 54], [64, 108], [64, 64],],
            channels: [],
            //[0, 1, 2, null],
            colorspaces: [],
            // ['srgb', 'b-w', null],
            hiddenLayers: [
                //                [512, 256, 128], [512, 256, 128, 64], [512, 256, 128, 64, 32],
                //                     [256, 128],      [256, 128, 64],      [256, 128, 64, 32],
                //                                           [128, 64],           [128, 64, 32],
                //                                                                     [64, 32],
                //                [32, 64], [32, 64, 128], [32, 64, 128, 512],
            ],
            activations: [],
            // ['sigmoid', 'relu', 'leaky-relu', 'tanh'],
            momentums: [],
            //[0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1],
            errorThreshs: [],
            // [0.5, 0.1, 0.05, 0.01, 0.005, 0.001],
            learningRates: [],
            // [0.5, 0.1, 0.05, 0.01, 0.005, 0.001,],
            testFiles: []
        },
    }
}